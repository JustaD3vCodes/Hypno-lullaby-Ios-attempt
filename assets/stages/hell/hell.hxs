var hellbell:Character;
var bellY:Float;
var bellX:Float;
var pillar:Character;
var beelzewalk:Character;
var beelzescary:Character;
var contract:FlxSprite;
var contractY:Float;
var contractStep:Float;

var pillar:FlxSprite;

var dawn:Boyfriend;
var bf:Boyfriend;

function onCreate() {
    PlayState.defaultCamZoom = 0.65;
	var resizeBG:Float = 0.75;

	var back:FlxSprite = new FlxSprite(130, 100);
	back.loadGraphic(Paths.image('back'));
	back.scrollFactor.set(1, 1);
	back.setGraphicSize(Std.int(back.width * resizeBG * 2));
	back.updateHitbox();
	back.antialiasing = true;
	add(back);

	pillar = new FlxSprite(130 + (924 - 656 / 2) + 100, 100 + (597 - 606 / 2) + 150);
	pillar.loadGraphic(Paths.image('pillar'));
	pillar.scrollFactor.set(1, 1);
	pillar.setGraphicSize(Std.int(pillar.width * resizeBG * 2));
	pillar.updateHitbox();
	pillar.antialiasing = true;

	PlayState.ratingPosition.set(600, 800);
	PlayState.bronzongMechanic = true;
}

function onCreatePost() {
	contractStep = 0;
	PlayState.instance.flipCharacters();	

	PlayState.instance.camPos.set(2000, 900);		
	boyfriend.x -= 20;
	boyfriend.y += 370;
	dadOpponent.x += 1550;
	dadOpponent.y += 275 + 150;

	hellbell = new Character().setCharacter(0, 0, 'hellbell');
	hellbell.scale.set(1.72, 1.72);
	hellbell.setPosition(dadOpponent.x - 880, dadOpponent.y - 280);
	hellbell.flipLeftRight();	
	bellY = hellbell.y;
	bellX = hellbell.x;

	beelzewalk = new Character().setCharacter(0, 0, 'beelze');
	beelzewalk.setPosition(dadOpponent.x, dadOpponent.y);
	beelzewalk.flipLeftRight();
	beelzewalk.visible = false;

	beelzescary = new Character().setCharacter(0, 0, 'beelzescary');
	beelzescary.setPosition(dadOpponent.x, dadOpponent.y);
	beelzescary.flipLeftRight();
	beelzescary.visible = false;
	beelzescary.x += -100;
	beelzescary.y += -20;
	PlayState.instance.dadStrums.character.push(beelzescary);

	contract = new FlxSprite();
	contract.frames = Paths.getSparrowAtlas('characters/beelze/ContractBF');
	contract.animation.addByPrefix('idle', 'ContractIdle', 24, false);
	contract.animation.addByPrefix('B', 'Contract_BF_01', 24, false);
	contract.animation.addByPrefix('O', 'Contract_BF_02', 24, false);
	contract.animation.addByPrefix('Y', 'Contract_BF_03', 24, false);
	contract.animation.addByPrefix('F', 'Contract_BF_04', 24, false);
	contract.animation.addByPrefix('R', 'Contract_BF_05', 24, false);
	contract.animation.addByPrefix('I', 'Contract_BF_06', 24, false);
	contract.animation.addByPrefix('E', 'Contract_BF_07', 24, false);
	contract.animation.addByPrefix('N', 'Contract_BF_08', 24, false);
	contract.animation.addByPrefix('D', 'Contract_BF_09', 24, false);
	contract.animation.play('idle');
	contract.antialiasing = true;
	contract.setPosition(dadOpponent.x - 302, dadOpponent.y + 50);
	contract.scale.set(1.95, 1.95);
	contractY = contract.y;
	contract.visible = false;

	add(hellbell);	
	add(beelzewalk);
	add(beelzescary);
	add(pillar);
	add(contract);

	dawn = new Boyfriend();
	dawn.setCharacter(boyfriend.x + 1350, boyfriend.y, 'dawn');
	dawn.flipLeftRight();
	// dawn.screenCenter();
	
	add(dawn);	
	PlayState.instance.boyfriendStrums.character.push(dawn);
	if (PlayState.instance.boyfriendStrums.singingCharacters.contains(PlayState.boyfriend))
		PlayState.instance.boyfriendStrums.singingCharacters = [dawn];
	PlayState.instance.dadStrums.visible = false;

	bf = new Boyfriend();
	bf.setCharacter(boyfriend.x + 1350, boyfriend.y, PlayState.SONG.player1);
	bf.flipLeftRight();
	add(bf);

	PlayState.instance.boyfriendStrums.character.push(bf);
	PlayState.instance.boyfriendStrums.singingCharacters.push(bf);
}

function onUpdate(elapsed) {
	if (hellbell != null && hellbell.animation.curAnim.name == 'idle') {
		hellbell.dance();
	}
	hellbell.y = bellY + Math.sin((180 / Math.PI) * ((Conductor.songPosition / 1000) / 72)) * 32;
	hellbell.x = bellX + Math.sin((180 / Math.PI) * ((Conductor.songPosition / 1000) / 96)) * 16;
	if (contract != null && contractStep <= 9) {
		contract.y = contractY + Math.sin((180 / Math.PI) * ((Conductor.songPosition / 1000) / 48)) * 16;
	}

	var percentage = ((contractStep * contractStep) / 100);
	if (contractStep > 4) 
		percentage += (Math.sin(((Conductor.songPosition) / (Conductor.stepCrochet * 16)) * Math.PI) * (contractStep / 10) * 0.25);
	if (contractStep > 9)
		percentage = 1;
	bf.atlasCharacter.alpha = percentage;
	dawn.atlasCharacter.alpha = 1 - percentage;
}

function onEvent(eventName) {
    switch (eventName) {
        default:
            trace('an event was called in death toll. woohoo');
        case 'Bong':
            hellbell.playAnim('bong', true);			
            hellbell.animation.finishCallback = function(name:String){
                if (name == 'bong') {
					hellbell.dance();
                    }
                }
			FlxG.camera.shake(0.015, 0.075);
			new FlxTimer().start(0.075, function(tmr:FlxTimer){
					FlxG.camera.shake(0.009, 0.15);
					new FlxTimer().start(0.15, function(tmr:FlxTimer){
						FlxG.camera.shake(0.005, 0.3);
					});
				});
		case 'Beelze Walk':
			PlayState.dadOpponent.visible = false;
			beelzewalk.visible = true;
			beelzewalk.playAnim('Walk');						
            beelzewalk.animation.finishCallback = function(name:String){
                if (name == 'Walk') {
					PlayState.defaultCamZoom += 0.35;
					beelzewalk.playAnim('Laugh');	
					beelzewalk.animation.finishCallback = function(name:String){
						if (name == 'Laugh') {								
								contract.visible = true;		
								beelzewalk.visible = false;												
								beelzescary.visible = true;
								PlayState.instance.dadStrums.singingCharacters = [beelzescary];
								PlayState.instance.iconP2.changeIcon('beelzescary');
								PlayState.defaultCamZoom -= 0.35;
							}
						}
                    }
                }
		case 'Dawn Transform':
			dawn.transformDawn();

		case 'Contract Advance':
			contractStep = contractStep + 1;
			switch (contractStep)
				{
					case 1:
						contract.animation.play('B');	
					case 2:
						contract.animation.play('O');
					case 3:
						contract.animation.play('Y');
					case 4:
						contract.animation.play('F');
					case 5:
						contract.animation.play('R');
					case 6:
						contract.animation.play('I');
					case 7:
						contract.animation.play('E');
					case 8:
						contract.animation.play('N');
					case 9:
						contract.animation.play('D');
					case 10:
						contract.color = 0xFF3131;
						FlxTween.tween(contract.scale, {x: 0.3, y: 0.3}, 1.3, {ease: FlxEase.backIn});	
						FlxTween.tween(contract, {alpha: 0}, 1.3, {ease: FlxEase.backIn});
				}					
		case 'HB Camera Flash':		
			var camflash = new FlxSprite(-FlxG.width, -FlxG.height).makeGraphic(FlxG.width * 3, FlxG.height * 3, FlxColor.WHITE);
			camflash.scrollFactor.set();
			camflash.screenCenter();
			add(camflash);
			
			camflash.alpha = 0.6;
			PlayState.defaultCamZoom += 0.08;
			FlxTween.tween(camflash, {alpha: 0}, 0.5, {
				ease: FlxEase.linear,		
				onComplete: function(tween:FlxTween)
					{
						PlayState.defaultCamZoom += 0.08;
						camflash.alpha = 0.7;							
						FlxTween.tween(camflash, {alpha: 0}, 0.7, {
							ease: FlxEase.linear,		
							onComplete: function(tween:FlxTween)
								{
									PlayState.defaultCamZoom -= 0.16;
									camflash.alpha = 1;							
									FlxTween.tween(camflash, {alpha: 0}, 1.5, {
										ease: FlxEase.linear,								
									});	
								}							
						});
					}							
			});

		case 'HB Ending':	
			PlayState.instance.hbEnding();	
		case 'Bf Icon Change':
			PlayState.instance.iconP1.changeIcon('bf');
			PlayState.instance.hbBar();		
    }
}